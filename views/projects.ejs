<%- include('./partials/header') %>

<section class="page-header">
  <div class="container">
    <h1>My Projects</h1>
    <p>A showcase of my work, personal projects, and contributions</p>
  </div>
</section>

<section class="projects-section">
  <div class="container">
    <div class="projects-filter">
      <button class="filter-btn active" data-filter="all">All</button>
      <button class="filter-btn" data-filter="node">Node.js</button>
      <button class="filter-btn" data-filter="express">Express</button>
      <button class="filter-btn" data-filter="mongodb">MongoDB</button>
      <button class="filter-btn" data-filter="php">PHP</button>
      <button class="filter-btn" data-filter="javascript">JavaScript</button>
    </div>
    
    <div class="projects-grid" id="projects-container">
      <!-- Projects will be loaded here via JavaScript -->
      <div class="loading">Loading projects...</div>
    </div>
  </div>
</section>

<section class="github-section">
  <div class="container">
    <div class="github-content">
      <i class="fab fa-github github-icon"></i>
      <h2>More Projects on GitHub</h2>
      <p>Check out my GitHub profile for more projects, contributions, and code samples.</p>
      <a href="https://github.com/kbrown-stack" target="_blank" class="btn btn-primary">Visit GitHub Profile</a>
    </div>
  </div>
</section>

<script>
  // Fetch projects from API when the page loads
  document.addEventListener('DOMContentLoaded', async () => {
    try {
      const response = await fetch('/api/projects');
      const projects = await response.json();
      
      const projectsContainer = document.getElementById('projects-container');
      projectsContainer.innerHTML = ''; // Clear loading message
      
      if (projects.length === 0) {
        projectsContainer.innerHTML = '<p class="no-projects">No projects found.</p>';
        return;
      }
      
      // Render all projects
      projects.forEach(project => {
        const projectElement = createProjectElement(project);
        projectsContainer.appendChild(projectElement);
      });
      
      // Set up filter functionality
      setupFilters();
      
    } catch (error) {
      console.error('Error fetching projects:', error);
      document.getElementById('projects-container').innerHTML = 
        '<p class="error-message">Error loading projects. Please try again later.</p>';
    }
  });
  
  // Create a project card element
  function createProjectElement(project) {
    const projectDiv = document.createElement('div');
    projectDiv.className = 'project-card';
    project.technologies.forEach(tech => {
      projectDiv.classList.add(tech.toLowerCase());
    });
    
    projectDiv.innerHTML = `
      <img class="project-img" src="${project.image || '/assets/project-placeholder.jpg'}" alt="${project.title}">
      <div class="project-content">
        <h3>${project.title}</h3>
        <p>${project.description}</p>
        <div class="project-tech">
          ${project.technologies.map(tech => `<span class="tech-tag">${tech}</span>`).join('')}
        </div>
        <div class="project-links">
          ${project.githubLink ? `<a href="${project.githubLink}" class="project-link" target="_blank"><i class="fab fa-github"></i> View Code</a>` : ''}
          ${project.demoLink ? `<a href="${project.demoLink}" class="project-link" target="_blank"><i class="fas fa-external-link-alt"></i> Live Demo</a>` : ''}
        </div>
      </div>
    `;
    
    return projectDiv;
  }
  
  // Set up filter functionality
  function setupFilters() {
    const filterButtons = document.querySelectorAll('.filter-btn');
    const projectCards = document.querySelectorAll('.project-card');
    
    filterButtons.forEach(button => {
      button.addEventListener('click', () => {
        // Remove active class from all buttons
        filterButtons.forEach(btn => btn.classList.remove('active'));
        // Add active class to clicked button
        button.classList.add('active');
        
        const filterValue = button.getAttribute('data-filter');
        
        projectCards.forEach(card => {
          if (filterValue === 'all') {
            card.style.display = 'block';
          } else if (card.classList.contains(filterValue)) {
            card.style.display = 'block';
          } else {
            card.style.display = 'none';
          }
        });
      });
    });
  }
</script>

<%- include('./partials/footer') %>
